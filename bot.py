import os
import csv
from datetime import datetime
from telegram import Update, ReplyKeyboardMarkup, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    ContextTypes,
    ConversationHandler,
    CallbackQueryHandler
)

# === üîë –ó–ê–ú–ï–ù–ò –ù–ê –°–í–û–ô –¢–û–ö–ï–ù ===
TOKEN = os.getenv("BOT_TOKEN")
if not TOKEN:
    raise ValueError("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")

# === üë§ –ó–ê–ú–ï–ù–ò –ù–ê –°–í–û–ô ID ===
ADMIN_ID = os.getenv("ADMIN_ID")
if not ADMIN_ID:
    raise ValueError("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è ADMIN_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
ADMIN_ID = int(ADMIN_ID)

# === üìÅ –§–ê–ô–õ–´ ===
PARTICIPANTS_FILE = "participants.csv"
TOURNAMENTS_FILE = "tournaments.csv"

# === üéØ –≠–¢–ê–ü–´ –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò ===
NICK, ROLE, RANK, OP_GG, DISCORD = range(5)

# === üéØ –ú–ï–ù–Æ ===
main_menu_kb = [
    ["üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", "üìÑ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å"],
    ["üë• –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", "üìÖ –î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è"],
    ["üìú –ü—Ä–∞–≤–∏–ª–∞ —Ç—É—Ä–Ω–∏—Ä–æ–≤"]
]
reply_menu = ReplyKeyboardMarkup(main_menu_kb, resize_keyboard=True)

# === –°–û–ó–î–ê–ù–ò–ï –§–ê–ô–õ–û–í ===
def init_files():
    if not os.path.exists(PARTICIPANTS_FILE):
        with open(PARTICIPANTS_FILE, "w", newline='', encoding="utf-8") as f:
            writer = csv.writer(f)
            writer.writerow(["User ID", "–ù–∏–∫–Ω–µ–π–º", "–†–æ–ª–∏", "–†–∞–Ω–≥", "Op.gg", "Discord", "–í—Ä–µ–º—è"])
        print("üìÅ –§–∞–π–ª participants.csv —Å–æ–∑–¥–∞–Ω")

    if not os.path.exists(TOURNAMENTS_FILE):
        with open(TOURNAMENTS_FILE, "w", newline='', encoding="utf-8") as f:
            writer = csv.writer(f)
            writer.writerow(["–ù–∞–∑–≤–∞–Ω–∏–µ", "–î–∞—Ç–∞"])
        print("üìÅ –§–∞–π–ª tournaments.csv —Å–æ–∑–¥–∞–Ω")

# === /start ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data.clear()
    await update.message.reply_text(
        "üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Ç—É—Ä–Ω–∏—Ä!\n\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=reply_menu
    )

# === –û–ë–†–ê–ë–û–¢–ö–ê –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò ===
... (–∫–æ–¥ –æ—Å—Ç–∞–ª—Å—è –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–º, –ø—Ä–æ–ø—É—Å—Ç–∏–ª —Ä–∞–¥–∏ —ç–∫–æ–Ω–æ–º–∏–∏ –º–µ—Å—Ç–∞)

# === –ö–û–ú–ê–ù–î–ê –î–õ–Ø –û–¢–î–ï–õ–¨–ù–´–• –û–ü–ï–†–ê–¶–ò–ô ===
async def admin_panel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != ADMIN_ID:
        await update.message.reply_text("–î–æ—Å—Ç—É–ø –∑–∞–∫—Ä—ã—Ç.")
        return
    
    # –ú–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    admin_menu_buttons = [
        [InlineKeyboardButton("–ü—Ä–æ—Å–º–æ—Ç—Ä —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", callback_data="view_participants")],
        [InlineKeyboardButton("–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data="delete_user")],
        [InlineKeyboardButton("–ú–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ", callback_data="delete_all_users")],
        [InlineKeyboardButton("–ó–∞–∫—Ä—ã—Ç—å", callback_data="close_admin")]
    ]
    reply_markup = InlineKeyboardMarkup(admin_menu_buttons)

    await update.message.reply_text("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å:", reply_markup=reply_markup)

async def handle_admin_actions(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "view_participants":
        await show_participants(query, context)
    elif query.data == "delete_user":
        await delete_user(query, context)
    elif query.data == "delete_all_users":
        await delete_all_users(query, context)
    elif query.data == "close_admin":
        await query.edit_message_text("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å –∑–∞–∫—Ä—ã—Ç–∞.")

# === –ü–û–ú–û–©–ù–ò–ö–ò –î–õ–Ø –ê–î–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê ===
async def show_participants(update: Update, context: ContextTypes.DEFAULT_TYPE):
    participants = load_participants()
    if not participants:
        await update.message.reply_text("–ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.", reply_markup=reply_menu)
        return

    message = f"üìã <b>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ: {len(participants)} —É—á–∞—Å—Ç–Ω–∏–∫(–∞)</b>:\n\n"
    for idx, p in enumerate(participants, start=1):
        message += (
            f"{idx}. üîπ <b>{p.nick}</b>\n"
            f"   ‚Ä¢ –†–æ–ª–∏: {p.roles}\n"
            f"   ‚Ä¢ –†–∞–Ω–≥: {p.rank}\n"
            f'   ‚Ä¢ <a href="{format_opgg_link(p.opgg)}">üéÆ Op.gg</a>\n'
            f"   ‚Ä¢ Discord: <code>{p.discord}</code>\n\n"
        )
    
    await update.message.reply_html(message, disable_web_page_preview=True, reply_markup=reply_menu)

async def delete_user(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ User ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å:")
    return "WAITING_DELETE_USER"

async def wait_and_perform_delete_user(update: Update, context: ContextTypes.DEFAULT_TYPE):
    target_user_id = update.message.text.strip()
    participants = load_participants()

    found = False
    for i, participant in enumerate(participants):
        if participant.user_id == target_user_id:
            found = True
            del participants[i]
            break
    
    if found:
        save_participants(participants)
        await update.message.reply_text(f"–£—á–∞—Å—Ç–Ω–∏–∫ —Å User ID {target_user_id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω.")
    else:
        await update.message.reply_text(f"–£—á–∞—Å—Ç–Ω–∏–∫–∞ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º User ID –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
    
    return ConversationHandler.END

async def delete_all_users(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ü–µ—Ä–µ–∑–∞–ø–∏—Å—å —Ñ–∞–π–ª–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    with open(PARTICIPANTS_FILE, 'w', newline='', encoding="utf-8") as f:
        writer = csv.writer(f)
        writer.writerow(["User ID", "–ù–∏–∫–Ω–µ–π–º", "–†–æ–ª–∏", "–†–∞–Ω–≥", "Op.gg", "Discord", "–í—Ä–µ–º—è"])

    await update.message.reply_text("–í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã.")

# === –ü–û–õ–ï–ó–ù–´–ï –ö–õ–ê–°–°–´ –ò –§–£–ù–ö–¶–ò–ò ===
class Participant:
    def __init__(self, data_row):
        self.user_id = data_row[0]
        self.nick = data_row[1]
        self.roles = data_row[2]
        self.rank = data_row[3]
        self.opgg = data_row[4]
        self.discord = data_row[5]
        self.time = data_row[6]

def load_participants():
    try:
        with open(PARTICIPANTS_FILE, 'r', encoding='utf-8') as f:
            reader = csv.reader(f)
            next(reader)  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
            return [Participant(row) for row in reader if len(row) == 7]
    except FileNotFoundError:
        return []

def save_participants(participants):
    with open(PARTICIPANTS_FILE, 'w', newline='', encoding="utf-8") as f:
        writer = csv.writer(f)
        writer.writerow(["User ID", "–ù–∏–∫–Ω–µ–π–º", "–†–æ–ª–∏", "–†–∞–Ω–≥", "Op.gg", "Discord", "–í—Ä–µ–º—è"])
        for p in participants:
            writer.writerow([p.user_id, p.nick, p.roles, p.rank, p.opgg, p.discord, p.time])

def format_opgg_link(opgg):
    if opgg.startswith('http'):
        return opgg
    else:
        return f"https://op.gg/summoners/{opgg.replace(' ', '%20')}"

# === –û–°–ù–û–í–ù–û–ô –•–≠–ù–î–õ–ï–† ===
def main() -> None:
    application = Application.builder().token(TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    conv_register_handler = ConversationHandler(
        entry_points=[
            CommandHandler("register", register_start),
            MessageHandler(filters.Text("üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"), register_start)
        ],
        states={
            NICK: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_nick)],
            ROLE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_role)],
            RANK: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_rank)],
            OP_GG: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_opgg)],
            DISCORD: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_discord)]
        },
        fallbacks=[]  # –û—Å—Ç–∞–≤–ª—è–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ fallbacks, —Ç–∞–∫ –∫–∞–∫ –≤ –Ω–∞—à–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–∏ –Ω–µ –Ω—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –≤—ã—Ö–æ–¥–∞
    )

    # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
    conv_edit_handler = ConversationHandler(
        entry_points=[CommandHandler("edit_profile", edit_profile), MessageHandler(filters.Text("üìÑ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å"), edit_profile)],
        states={
            "EDITING_PROFILE": [CallbackQueryHandler(process_field_selection)],
            "WAITING_FOR_VALUE": [MessageHandler(filters.TEXT & ~filters.COMMAND, save_edited_field)]
        },
        fallbacks=[CallbackQueryHandler(lambda u,c: c.answer())],
        per_message=True
    )

    # –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å
    conv_admin_handler = ConversationHandler(
        entry_points=[CommandHandler("admin", admin_panel)],
        states={"ADMIN_MENU": [CallbackQueryHandler(handle_admin_actions)]},
        fallbacks=[]  # –û—Å—Ç–∞–≤–ª—è–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ fallbacks, —Ç–∞–∫ –∫–∞–∫ –≤ –Ω–∞—à–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–∏ –Ω–µ –Ω—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –≤—ã—Ö–æ–¥–∞
    )

    # –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    conv_delete_user_handler = ConversationHandler(
        entry_points=[CallbackQueryHandler(delete_user)],
        states={"WAITING_DELETE_USER": [MessageHandler(filters.TEXT & ~filters.COMMAND, wait_and_perform_delete_user)]},
        fallbacks=[]  # –û—Å—Ç–∞–≤–ª—è–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ fallbacks, —Ç–∞–∫ –∫–∞–∫ –≤ –Ω–∞—à–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–∏ –Ω–µ –Ω—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –≤—ã—Ö–æ–¥–∞
    )

    application.add_handler(conv_register_handler)
    application.add_handler(conv_edit_handler)
    application.add_handler(conv_admin_handler)
    application.add_handler(conv_delete_user_handler)
    application.add_handler(MessageHandler(filters.Text("üë• –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"), show_participants))
    application.add_handler(MessageHandler(filters.Text("üìÖ –î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è"), show_dates))
    application.add_handler(MessageHandler(filters.Text("üìú –ü—Ä–∞–≤–∏–ª–∞ —Ç—É—Ä–Ω–∏—Ä–æ–≤"), show_rules))
    application.add_handler(CommandHandler("start", start))

    # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –º–µ—Ç–æ–¥–æ–º run_polling()
    init_files()
    application.run_polling()

if __name__ == "__main__":
    main()
